#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ö–û–ú–ê–ù–î
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""

import asyncio
import os
import sys
import logging
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_files = [
    Path(__file__).parent / 'api.env',
    Path(__file__).parent.parent / '.env',
    Path(__file__).parent / '.env'
]

for env_file in env_files:
    if env_file.exists():
        load_dotenv(env_file, override=False)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ {env_file}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(message)s'
)
logger = logging.getLogger(__name__)


async def test_telegram_commands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ Telegram –∫–æ–º–∞–Ω–¥—ã"""
    
    print("=" * 70)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ö–û–ú–ê–ù–î")
    print("=" * 70)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN') or os.getenv('TELEGRAM_TOKEN')
    telegram_chat_id = os.getenv('TELEGRAM_CHAT_ID')
    
    if not telegram_token:
        print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env –∏–ª–∏ api.env —Ñ–∞–π–ª")
        return False
    
    if not telegram_chat_id:
        print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å chat_id")
    else:
        print(f"‚úÖ Telegram Chat ID: {telegram_chat_id}")
    
    print(f"‚úÖ Telegram Token: {telegram_token[:10]}...")
    print()
    
    try:
        # –ò–º–ø–æ—Ä—Ç –±–æ—Ç–∞
        from super_bot_v4_mtf import SuperBotV4MTF
        from telegram import Bot
        from telegram.ext import Application
        
        print("üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        bot = SuperBotV4MTF()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        await bot.initialize()
        
        if not bot.application:
            print("‚ùå Telegram Application –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        if not bot.commands_handler:
            print("‚ùå Telegram Commands Handler –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥...")
        print()
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
        all_commands = [
            ('/start', 'cmd_start'),
            ('/help', 'cmd_help'),
            ('/status', 'cmd_status'),
            ('/balance', 'cmd_balance'),
            ('/positions', 'cmd_positions'),
            ('/history', 'cmd_history'),
            ('/settings', 'cmd_settings'),
            ('/health', 'cmd_health'),
            ('/stop', 'cmd_stop'),
            ('/resume', 'cmd_resume'),
            ('/stats', 'cmd_stats')
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–µ—Ç–æ–¥—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        commands_ok = 0
        for cmd_name, method_name in all_commands:
            if hasattr(bot.commands_handler, method_name):
                print(f"  ‚úÖ {cmd_name:15s} - {method_name} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                commands_ok += 1
            else:
                print(f"  ‚ùå {cmd_name:15s} - {method_name} –ù–ï –ù–ê–ô–î–ï–ù")
        
        print()
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {commands_ok}/{len(all_commands)}")
        print()
        
        # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å chat_id)
        if telegram_chat_id:
            print("üì§ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            try:
                test_message = """üß™ *–¢–ï–°–¢ TELEGRAM –ö–û–ú–ê–ù–î*

‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã
‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/balance - –ë–∞–ª–∞–Ω—Å
/positions - –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
/history - –ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/health - Health Score
/stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é
/resume - –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!
"""
                
                await bot.send_telegram_v4(test_message)
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
                print()
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                print()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ polling
        print("üì° –°—Ç–∞—Ç—É—Å Telegram Polling:")
        if bot.application.updater:
            print("  ‚úÖ Updater –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            print("  ‚ö†Ô∏è Updater –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ run_v4)")
        
        print()
        print("=" * 70)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 70)
        print()
        print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python super_bot_v4_mtf.py")
        print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
        print("   3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
        print()
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if bot.exchange:
            try:
                await bot.exchange.close()
            except:
                pass
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: pip install -r requirements_bot.txt")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False


async def test_simple_bot_start():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è"""
    print("\nüîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞...")
    
    try:
        from super_bot_v4_mtf import SuperBotV4MTF
        
        bot = SuperBotV4MTF()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
        checks = {
            'API –∫–ª—é—á Bybit': bool(bot.api_key),
            'API —Å–µ–∫—Ä–µ—Ç Bybit': bool(bot.api_secret),
            'Telegram —Ç–æ–∫–µ–Ω': bool(bot.telegram_token),
            'Telegram Chat ID': bool(bot.telegram_chat_id),
            'Exchange –æ–±—ä–µ–∫—Ç': False,  # –°–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ initialize()
            'Application –æ–±—ä–µ–∫—Ç': False,  # –°–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ initialize()
        }
        
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for check_name, status in checks.items():
            icon = "‚úÖ" if status else "‚ùå"
            print(f"  {icon} {check_name}: {'–î–∞' if status else '–ù–µ—Ç'}")
        
        # –ü—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
        try:
            await bot.initialize()
            checks['Exchange –æ–±—ä–µ–∫—Ç'] = bot.exchange is not None
            checks['Application –æ–±—ä–µ–∫—Ç'] = bot.application is not None
            
            print("\nüìä –ü–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:")
            for check_name, status in checks.items():
                icon = "‚úÖ" if status else "‚ùå"
                print(f"  {icon} {check_name}: {'–î–∞' if status else '–ù–µ—Ç'}")
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º
            if bot.exchange:
                await bot.exchange.close()
            
            return all(checks.values())
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –∫–æ–º–∞–Ω–¥
        result1 = await test_telegram_commands()
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç
        result2 = await test_simple_bot_start()
        
        print("\n" + "=" * 70)
        if result1 and result2:
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å Telegram –∫–æ–º–∞–Ω–¥–∞–º–∏")
            print("\nüí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ Telegram")
        else:
            print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
            print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
        print("=" * 70)
        
    except KeyboardInterrupt:
        print("\n\nüõë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main())


