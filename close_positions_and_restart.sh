#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–π –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

SERVER_IP="213.163.199.116"
SSH_KEY="$HOME/.ssh/upcloud_trading_bot"
BOT_DIR="/opt/bot"

echo "=================================="
echo "üîÑ –ó–ê–ö–†–´–¢–ò–ï –ü–û–ó–ò–¶–ò–ô –ò –ü–ï–†–ï–ó–ê–ü–£–°–ö –ë–û–¢–ê"
echo "=================================="
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
execute_remote() {
    ssh -i "$SSH_KEY" root@"$SERVER_IP" "$1"
}

# 1. –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ –±–∏—Ä–∂–µ
echo "1Ô∏è‚É£ –ó–ê–ö–†–´–¢–ò–ï –û–¢–ö–†–´–¢–´–• –ü–û–ó–ò–¶–ò–ô:"
echo "----------------------------------"
execute_remote "python3 << 'PYCLOSE'
import asyncio
import sys
import os
sys.path.insert(0, '$BOT_DIR')
os.chdir('$BOT_DIR')
from dotenv import load_dotenv
load_dotenv('$BOT_DIR/api.env')

import ccxt.async_support as ccxt

async def close_all_positions():
    try:
        exchange = ccxt.bybit({
            'apiKey': os.getenv('BYBIT_API_KEY'),
            'secret': os.getenv('BYBIT_API_SECRET'),
            'sandbox': False,
            'enableRateLimit': True,
            'options': {
                'defaultType': 'linear',
                'accountType': 'UNIFIED'
            }
        })
        
        print('üîç –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏...')
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏
        try:
            positions = await exchange.fetch_positions(params={'category': 'linear'})
        except Exception as e1:
            try:
                positions = await exchange.fetch_positions()
            except Exception as e2:
                print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π: {e1} / {e2}')
                await exchange.close()
                return
        
        open_positions = []
        for pos in positions:
            size = pos.get('contracts', 0) or pos.get('size', 0)
            if size > 0:
                open_positions.append(pos)
        
        print(f'üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {len(open_positions)}')
        
        if not open_positions:
            print('‚úÖ –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –Ω–µ—Ç')
            await exchange.close()
            return
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –ø–æ–∑–∏—Ü–∏—é
        for pos in open_positions:
            symbol = pos.get('symbol', 'N/A')
            side = pos.get('side', '').lower()
            size = pos.get('contracts', 0) or pos.get('size', 0)
            
            print(f'\\nüìå –ó–∞–∫—Ä—ã–≤–∞–µ–º {symbol} {side.upper()} (—Ä–∞–∑–º–µ—Ä: {size})')
            
            try:
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –æ—Ä–¥–µ—Ä–æ–º
                close_side = 'sell' if side == 'long' or side == 'buy' else 'buy'
                close_order = await exchange.create_market_order(
                    symbol=symbol,
                    side=close_side,
                    amount=size,
                    params={
                        'category': 'linear',
                        'reduceOnly': True
                    }
                )
                print(f'   ‚úÖ –ü–æ–∑–∏—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞! Order ID: {close_order.get(\"id\", \"N/A\")}')
            except Exception as e:
                print(f'   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {e}')
        
        await exchange.close()
        print('\\n‚úÖ –í—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã!')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()

asyncio.run(close_all_positions())
PYCLOSE
"

echo ""
echo "2Ô∏è‚É£ –û–°–¢–ê–ù–û–í–ö–ê –ë–û–¢–ê:"
echo "----------------------------------"
execute_remote "systemctl stop trading-bot"

echo ""
echo "3Ô∏è‚É£ –û–ñ–ò–î–ê–ù–ò–ï –ü–û–õ–ù–û–ô –û–°–¢–ê–ù–û–í–ö–ò (5 —Å–µ–∫):"
echo "----------------------------------"
sleep 5

echo ""
echo "4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–†–û–¶–ï–°–°–û–í:"
echo "----------------------------------"
execute_remote "ps aux | grep -E 'super_bot_v4_mtf\.py|python.*bot' | grep -v grep || echo '   ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'"

echo ""
echo "5Ô∏è‚É£ –ó–ê–ì–†–£–ó–ö–ê –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û –ö–û–î–ê:"
echo "----------------------------------"

# –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "   üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
scp -i "$SSH_KEY" super_bot_v4_mtf.py root@"$SERVER_IP":"$BOT_DIR/"
scp -i "$SSH_KEY" smart_coin_selector.py root@"$SERVER_IP":"$BOT_DIR/"

echo ""
echo "6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê:"
echo "----------------------------------"
execute_remote "cd $BOT_DIR && python3 -m py_compile super_bot_v4_mtf.py && echo '   ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π' || echo '   ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞'"

echo ""
echo "7Ô∏è‚É£ –ü–ï–†–ï–ó–ê–ü–£–°–ö –ë–û–¢–ê:"
echo "----------------------------------"
execute_remote "systemctl start trading-bot"

echo ""
echo "8Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê:"
echo "----------------------------------"
sleep 3
execute_remote "systemctl status trading-bot --no-pager | head -15"

echo ""
echo "9Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):"
echo "----------------------------------"
sleep 5
execute_remote "tail -30 $BOT_DIR/logs/system/bot.log 2>/dev/null || tail -30 $BOT_DIR/bot.log 2>/dev/null || echo '   –õ–æ–≥–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã'"

echo ""
echo "=================================="
echo "‚úÖ –ì–û–¢–û–í–û!"
echo "=================================="
echo ""
echo "üìã –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   ssh -i $SSH_KEY root@$SERVER_IP 'tail -f $BOT_DIR/logs/system/bot.log'"
echo ""
