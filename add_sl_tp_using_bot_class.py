#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SL/TP –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ –±–æ—Ç–∞
"""

import asyncio
import sys
import os

sys.path.insert(0, '/opt/bot')
os.chdir('/opt/bot')
from dotenv import load_dotenv
load_dotenv('/opt/bot/api.env')

from super_bot_v4_mtf import SuperBotV4MTF

POSITION_SIZE = 5.0
LEVERAGE = 5
MAX_STOP_LOSS_USD = 5.0
TP_PERCENT = 20.0


async def main():
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        bot = SuperBotV4MTF()
        await bot.initialize()
        
        print("üîç –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏...")
        print("=" * 70)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ —á–µ—Ä–µ–∑ –±–∏—Ä–∂—É –±–æ—Ç–∞
        positions = await bot.exchange.fetch_positions(params={'category': 'linear'})
        open_positions = [p for p in positions if (p.get('contracts', 0) or p.get('size', 0)) > 0]
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {len(open_positions)}\n")
        
        if not open_positions:
            print("‚úÖ –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
            return
        
        for pos in open_positions:
            symbol = pos.get('symbol', '')
            side = pos.get('side', '').lower()
            entry_price = float(pos.get('entryPrice', 0) or pos.get('entry', 0))
            size = float(pos.get('contracts', 0) or pos.get('size', 0))
            
            print(f"\nüìå –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {symbol} {side.upper()}:")
            print(f"   –í—Ö–æ–¥: ${entry_price:.8f}")
            print(f"   –†–∞–∑–º–µ—Ä: {size}")
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º SL –∏ TP
            position_notional = POSITION_SIZE * LEVERAGE
            stop_loss_percent = (MAX_STOP_LOSS_USD / position_notional) * 100
            
            if side in ['long', 'buy']:
                stop_loss_price = entry_price * (1 - stop_loss_percent / 100.0)
                tp_price = entry_price * (1 + TP_PERCENT / 100.0)
                direction = 'buy'
            else:
                stop_loss_price = entry_price * (1 + stop_loss_percent / 100.0)
                tp_price = entry_price * (1 - TP_PERCENT / 100.0)
                direction = 'sell'
            
            print(f"   üõë SL: ${stop_loss_price:.8f} (-${MAX_STOP_LOSS_USD:.2f} –º–∞–∫—Å–∏–º—É–º)")
            print(f"   üéØ TP: ${tp_price:.8f} (+{TP_PERCENT:.0f}%)")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –±–æ—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SL/TP –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–æ–∑–∏—Ü–∏–∏
            print(f"\n   ‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Stop Loss –∏ Take Profit...")
            
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π
                success = await bot.add_sl_tp_to_existing_position(
                    symbol=symbol,
                    side=direction,
                    entry_price=entry_price
                )
                
                if success:
                    print(f"      ‚úÖ SL –∏ TP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
                else:
                    print(f"      ‚ö†Ô∏è SL/TP –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {str(e)[:100]}")
                import traceback
                traceback.print_exc()
        
        print("\n" + "=" * 70)
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if bot.exchange:
            await bot.exchange.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main())

