#!/usr/bin/env python3
"""
üßÆ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å—á—ë—Ç–æ–≤ Trailing Stop
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏ –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ SL
"""

from bot_v2_exchange import ExchangeManager
import asyncio

async def verify_trailing_calculations():
    print("="*70)
    print("üßÆ –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø TRAILING STOP –†–ê–°–ß–Å–¢–û–í")
    print("="*70)
    
    em = ExchangeManager()
    await em.connect()
    
    positions = await em.fetch_positions()
    open_pos = [p for p in positions if p["contracts"] > 0]
    
    print(f"\nüìä –ü–æ–∑–∏—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(open_pos)}\n")
    
    all_correct = True
    
    for p in open_pos:
        symbol = p["symbol"]
        side = p["side"]
        entry = p["entryPrice"]
        current = p.get("markPrice", entry)
        
        info = p.get("info", {})
        current_sl = info.get("stopLoss")
        
        print("="*70)
        print(f"üíé {symbol} | {side.upper()}")
        print("="*70)
        
        # ============================================
        # –®–ê–ì 1: –†–∞—Å—á—ë—Ç —Ç–µ–∫—É—â–µ–π –ø—Ä–∏–±—ã–ª–∏
        # ============================================
        print(f"\nüìä –®–ê–ì 1: –†–∞—Å—á—ë—Ç –ø—Ä–∏–±—ã–ª–∏")
        print(f"   Entry Price: ${entry:.4f}")
        print(f"   Current Price: ${current:.4f}")
        
        if side.lower() in ["buy", "long"]:
            price_change = current - entry
            price_change_pct = (price_change / entry) * 100
            print(f"   LONG: (Current - Entry) / Entry")
            print(f"         ({current:.4f} - {entry:.4f}) / {entry:.4f}")
        else:  # SHORT
            price_change = entry - current
            price_change_pct = (price_change / entry) * 100
            print(f"   SHORT: (Entry - Current) / Entry")
            print(f"          ({entry:.4f} - {current:.4f}) / {entry:.4f}")
        
        print(f"   = {price_change_pct:+.2f}%")
        
        # –° —É—á—ë—Ç–æ–º –ø–ª–µ—á–∞
        profit_pct = price_change_pct * 5
        print(f"   –° –ø–ª–µ—á–æ–º 5x: {profit_pct:+.1f}%")
        
        # ============================================
        # –®–ê–ì 2: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ SL
        # ============================================
        print(f"\nüéØ –®–ê–ì 2: –†–∞—Å—á—ë—Ç –Ω–æ–≤–æ–≥–æ Trailing SL")
        
        new_sl = None
        trailing_level = None
        
        if profit_pct >= 10:
            if side.lower() in ["buy", "long"]:
                new_sl = entry * 1.05  # +5%
                trailing_level = "+5%"
            else:  # SHORT
                new_sl = entry * 1.02  # +2%
                trailing_level = "+2%"
            print(f"   –ü—Ä–∏–±—ã–ª—å {profit_pct:.1f}% ‚â• 10%")
            
        elif profit_pct >= 5:
            if side.lower() in ["buy", "long"]:
                new_sl = entry * 1.02  # +2%
                trailing_level = "+2%"
            else:  # SHORT
                new_sl = entry * 1.01  # +1%
                trailing_level = "+1%"
            print(f"   –ü—Ä–∏–±—ã–ª—å {profit_pct:.1f}% ‚â• 5%")
            
        elif profit_pct >= 2:
            if side.lower() in ["buy", "long"]:
                new_sl = entry  # –ë–µ–∑—É–±—ã—Ç–æ–∫
                trailing_level = "–±–µ–∑—É–±—ã—Ç–æ–∫"
            else:  # SHORT
                new_sl = entry * 1.002  # +0.2%
                trailing_level = "+0.2%"
            print(f"   –ü—Ä–∏–±—ã–ª—å {profit_pct:.1f}% ‚â• 2%")
        else:
            print(f"   –ü—Ä–∏–±—ã–ª—å {profit_pct:.1f}% < 2% ‚Üí SL –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è")
        
        if new_sl:
            print(f"   ‚Üí –ù–æ–≤—ã–π SL: ${new_sl:.4f} ({trailing_level})")
            
            # –†–∞—Å—á—ë—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç Entry
            if side.lower() in ["buy", "long"]:
                sl_change_pct = ((new_sl - entry) / entry) * 100
            else:  # SHORT
                sl_change_pct = ((entry - new_sl) / entry) * 100
            
            print(f"   ‚Üí –û—Ç Entry: {sl_change_pct:+.2f}%")
        
        # ============================================
        # –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ª–∂–µ–Ω –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è
        # ============================================
        print(f"\n‚úÖ –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
        if current_sl:
            current_sl_float = float(current_sl)
            print(f"   –¢–µ–∫—É—â–∏–π SL: ${current_sl_float:.4f}")
            
            if new_sl:
                print(f"   –ù–æ–≤—ã–π SL: ${new_sl:.4f}")
                
                should_update = False
                
                if side.lower() in ["buy", "long"]:
                    # –î–ª—è LONG: –Ω–æ–≤—ã–π SL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –í–´–®–ï —Ç–µ–∫—É—â–µ–≥–æ
                    should_update = new_sl > current_sl_float
                    print(f"   LONG –ø—Ä–æ–≤–µ—Ä–∫–∞: {new_sl:.4f} > {current_sl_float:.4f} = {should_update}")
                else:  # SHORT
                    # –î–ª—è SHORT: –Ω–æ–≤—ã–π SL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ù–ò–ñ–ï —Ç–µ–∫—É—â–µ–≥–æ –∏ –í–´–®–ï Entry
                    min_sl = entry * 1.001  # Entry + 0.1%
                    if new_sl < min_sl:
                        new_sl = min_sl
                        print(f"   ‚ö†Ô∏è SL —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –¥–æ –º–∏–Ω–∏–º—É–º–∞: ${new_sl:.4f}")
                    
                    should_update = new_sl < current_sl_float and new_sl > entry
                    print(f"   SHORT –ø—Ä–æ–≤–µ—Ä–∫–∞:")
                    print(f"      {new_sl:.4f} < {current_sl_float:.4f} = {new_sl < current_sl_float}")
                    print(f"      {new_sl:.4f} > {entry:.4f} = {new_sl > entry}")
                    print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {should_update}")
                
                if should_update:
                    print(f"   ‚úÖ SL –î–û–õ–ñ–ï–ù –û–ë–ù–û–í–ò–¢–¨–°–Ø")
                else:
                    print(f"   ‚è∏Ô∏è SL –ù–ï –û–ë–ù–û–í–õ–Ø–ï–¢–°–Ø (—É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã)")
            else:
                print(f"   ‚è∏Ô∏è –ü—Ä–∏–±—ã–ª—å < 2% ‚Üí SL –æ—Å—Ç–∞—ë—Ç—Å—è: ${current_sl_float:.4f}")
        else:
            print(f"   ‚ö†Ô∏è Stop Loss –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            all_correct = False
        
        # ============================================
        # –ü–†–û–í–ï–†–ö–ê –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò
        # ============================================
        print(f"\nüî¨ –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø:")
        
        issues = []
        
        if current_sl:
            sl_f = float(current_sl)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: SL –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É –æ—Ç Entry
            if side.lower() in ["buy", "long"]:
                if sl_f >= entry:
                    print(f"   üéØ LONG: SL={sl_f:.4f} >= Entry={entry:.4f} ‚Üí –ë–µ–∑—É–±—ã—Ç–æ–∫!")
                elif sl_f < entry * 0.9:
                    print(f"   ‚ö†Ô∏è LONG: SL —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ –æ—Ç Entry")
                    issues.append("SL —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ")
                else:
                    print(f"   ‚úÖ LONG: SL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:  # SHORT
                if sl_f <= entry:
                    print(f"   ‚ùå SHORT: SL={sl_f:.4f} <= Entry={entry:.4f} ‚Üí –û–®–ò–ë–ö–ê!")
                    issues.append("SL –Ω–∏–∂–µ Entry –¥–ª—è SHORT!")
                    all_correct = False
                elif sl_f > entry * 1.1:
                    print(f"   ‚ö†Ô∏è SHORT: SL —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ –æ—Ç Entry")
                    issues.append("SL —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ")
                else:
                    print(f"   ‚úÖ SHORT: SL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: Trailing —Ä–∞–±–æ—Ç–∞–µ—Ç
            if profit_pct >= 2:
                # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –±–µ–∑—É–±—ã—Ç–∫–µ –∏–ª–∏ –ª—É—á—à–µ
                if side.lower() in ["buy", "long"]:
                    if sl_f >= entry:
                        print(f"   ‚úÖ Trailing –∞–∫—Ç–∏–≤–µ–Ω: –ø—Ä–∏–±—ã–ª—å –∑–∞—â–∏—â–µ–Ω–∞")
                    else:
                        print(f"   ‚ö†Ô∏è –ü—Ä–∏ –ø—Ä–∏–±—ã–ª–∏ {profit_pct:.1f}% SL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ Entry")
                        issues.append("Trailing –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
                else:  # SHORT
                    expected_min = entry * 1.002  # +0.2%
                    if sl_f <= expected_min:
                        print(f"   ‚úÖ Trailing –∞–∫—Ç–∏–≤–µ–Ω: –ø—Ä–∏–±—ã–ª—å –∑–∞—â–∏—â–µ–Ω–∞")
                    else:
                        print(f"   ‚ö†Ô∏è SL –º–æ–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å –±–ª–∏–∂–µ")
        
        if issues:
            print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {len(issues)}")
            for issue in issues:
                print(f"   ‚Ä¢ {issue}")
        else:
            print(f"\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        
        print("")
    
    await em.disconnect()
    
    print("="*70)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê")
    print("="*70)
    
    if all_correct:
        print("\nüéâ –í–°–Ø –õ–û–ì–ò–ö–ê TRAILING STOP –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("\n‚úÖ –ì–û–¢–û–í –ö –ù–û–ß–ù–û–ô –¢–û–†–ì–û–í–õ–ï:")
        print("   ‚úÖ –í—Å–µ SL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("   ‚úÖ Trailing —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ø—Ä–∏–±—ã–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
        print("   ‚úÖ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–æ–≤ –≤–µ—Ä–Ω–∞")
        print("   ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç —É–±—ã—Ç–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞")
    else:
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ –Ω–æ—á–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º")
    
    print("="*70)
    
    return all_correct

asyncio.run(verify_trailing_calculations())


